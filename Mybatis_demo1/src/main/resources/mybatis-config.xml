<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>


    <!--引入properties文件-->
    <properties resource="jdbc.properties"></properties>
    <!--设置类型别名-->
    <typeAliases>
        <!--
            typeAlias:设置某个类型的别名
            属性：
                type：设置需要设置别名的类型
                alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名不区分大小写
        -->
        <typeAlias type="com.yz.Mybatis_demo1.entity.User" alias="User"></typeAlias>
        <!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写-->
        <!--<package name="com.yz.Mybatis_demo1.entity"/>-->
    </typeAliases>
    <!--
        environments:配置多个数据库的环境
        不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。
        属性：
            default：设置默认是用的环境的id
    -->
    <!--设置连接数据库的环境-->
    <environments default="development">
        <!--
            environment：配置某个具体的环境
            属性：
                id：表示连接数据库的环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager：设置事务管理方式
                属性：
                    type：“JDBC|MANAGED
                    JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事务的提交或回滚需要手动处理
                    MANAGED:被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource:配置数据源
                属性:
                    type：设置数据源的类型
                    type:"POOLED|UNPOOLED|JNDI"
                    POOLED：表示使用数据库连接池缓存数据库连接
                    UNPOOLED：表示不使用数据库连接池
                    JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <!--
                    driver – 这是 JDBC 驱动的 Java 类全限定名（并不是 JDBC 驱动中可能包含的数据源类）。
                    url – 这是数据库的 JDBC URL 地址。
                    username – 登录数据库的用户名。
                    password – 登录数据库的密码。
                -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--引入映射文件-->
    <mappers>
        <mapper resource="mappers/UserMapper.xml"></mapper>
        <!-- 将包内的映射器接口实现全部注册为映射器 -->
<!--        <package name="com.yz.Mybatis_demo1.mapper"/>-->
    </mappers>
</configuration>